reg_4fac
cbind(rownames(reg_4fac), reg_4fac[,c(1,2,6)])
cbind(strategies = rownames(reg_4fac), reg_4fac[,c(1,2,6)])
cbind(strategies = rownames(reg_4fac), reg_4fac[,c(1,2,6)]) %>% pivot_longer(col = -1, names_to = "stats", values_to = "value")
plotQ2 <- cbind(strategies = rownames(reg_4fac), reg_4fac[,c(1,2,6)]) %>% pivot_longer(col = -1, names_to = "stats", values_to = "value")
plotQ2
ggplot(plotQ2)+
geom_col(aes(x = strategies, y = values, group = stats), position = "dodge", fill = "blue", width = 0.4)+
```
plotQ2 <- cbind(strategies = rownames(reg_4fac), reg_4fac[,c(1,2,6)]) %>% pivot_longer(col = -1, names_to = "stats", values_to = "value")
plotQ2
ggplot(plotQ2)+
geom_col(aes(x = strategies, y = value, group = stats), position = "dodge", fill = "blue", width = 0.4)+
```
ggplot(plotQ2)+
geom_col(aes(x = strategies, y = value, group = stats))
ggplot(plotQ2)+
geom_col(aes(x = strategies, y = value, fill = stats))
ggplot(plotQ2)+
geom_col(aes(x = strategies, y = value, fill = stats), position = "dodge")
plotQ2$alpha = plotQ2$alpha*100
ggplot(plotQ2)+
geom_col(aes(x = strategies, y = value, fill = stats), position = "dodge")
plotQ2
plotQ2 <- cbind(strategies = rownames(reg_4fac), reg_4fac[,c(1,2,6)]) %>% pivot_longer(col = -1, names_to = "stats", values_to = "value")
plotQ2
plotQ2$alpha = plotQ2$alpha*100
plotQ2$alpha <- plotQ2$alpha*100
plotQ2
ggplot(plotQ2)+
geom_col(aes(x = strategies, y = value, fill = stats), position = "dodge")
reg_4fac
reg_4fac$alpha = paste0(round(reg_4fac$alpha * 100, 3), '%')
reg_4fac
plotQ2 <- cbind(strategies = rownames(reg_4fac), reg_4fac[,c(2,6)]) %>% pivot_longer(col = -1, names_to = "stats", values_to = "value")
plotQ2
ggplot(plotQ2)+
geom_col(aes(x = strategies, y = value, fill = stats), position = "dodge")
reg_4fac
ggplot(reg_4fac)+
geom_col(aes(x = rownames(reg_4fac), y = alpha))
ggplot(reg_4fac)+
geom_col(aes(x = rownames(reg_4fac), y = alpha))+
theme_minimal()
ggplot(reg_4fac)+
geom_col(aes(x = rownames(reg_4fac), y = alpha))+
geom_text(aes(x = rownames(reg_4fac), y = alpha, label = alpha))
ggplot(reg_4fac)+
geom_col(aes(x = rownames(reg_4fac), y = alpha))+
geom_text(aes(x = rownames(reg_4fac), y = alpha, label = alpha))+
theme_minimal()
ggplot(reg_4fac)+
geom_col(aes(x = rownames(reg_4fac), y = alpha))+
geom_text(aes(x = rownames(reg_4fac), y = alpha, label = alpha + 0.0001))+
theme_minimal()
ggplot(reg_4fac)+
geom_col(aes(x = rownames(reg_4fac), y = alpha))+
geom_text(aes(x = rownames(reg_4fac), y = alpha, label = alpha + 0.0001%))+
ggplot(reg_4fac)+
geom_col(aes(x = rownames(reg_4fac), y = alpha))+
geom_text(aes(x = rownames(reg_4fac), y = alpha, label = alpha))+
theme_minimal()
plotQ2_2 <- cbind(strategies = rownames(reg_4fac), reg_4fac[,c(2,6)]) %>% pivot_longer(col = -1, names_to = "stats", values_to = "value")
reg_4fac = NULL
for(nts.name in nts.names) {
lm.temp = lm(unlist(nts[nts.name] - rf) ~ kts$Mkt.RF + kts$SMB + kts$HML + kts$MOM)
sum = summary(lm.temp)
coef = sum$coefficients[, "Estimate"]
coef.se = sum$coefficients[, "Std. Error"]
R = sum$r.squared
coef.h0 = c(0,1,0,0,0)
coef.tstat = (coef - coef.h0) / coef.se
reg = c(coef, R, coef.tstat)
reg_4fac = rbind(reg_4fac, reg)
}
reg_4fac[, 2:5] = round(reg_4fac[, 2:5], 3)
reg_4fac[, 6:11] = round(reg_4fac[, 6:11], 2)
reg_4fac[1, 7:11] = NA
rownames(reg_4fac) = nts.names
colnames(reg_4fac) = c('alpha', 'Mkt-RF', 'SMB', 'HML', 'MOM', 'R-Squared',
'tstat.alpha', 'tstat.Mkt-RF', 'tstat.SMB', 'tstat.HML', 'tstat.MOM')
reg_4fac = as.data.frame(reg_4fac)
plotQ2 <- reg_4fac
ggplot(plotQ2)+
geom_col(aes(x = rownames(reg_4fac), y = alpha))+
geom_text(aes(x = rownames(reg_4fac), y = alpha, label = alpha))+
theme_minimal()
ggplot(plotQ2)+
geom_col(aes(x = rownames(plotQ2), y = alpha))+
geom_text(aes(x = rownames(plotQ2), y = alpha, label = alpha+0.001))+
theme_minimal()
ggplot(plotQ2)+
geom_col(aes(x = rownames(plotQ2), y = alpha))+
geom_text(aes(x = rownames(plotQ2), y = alpha+0.0001, label = alpha))+
theme_minimal()
ggplot(plotQ2)+
geom_col(aes(x = rownames(plotQ2), y = alpha))+
geom_text(aes(x = rownames(plotQ2), y = alpha+0.00001, label = alpha))+
theme_minimal()
ggplot(plotQ2)+
geom_col(aes(x = rownames(plotQ2), y = alpha))+
geom_text(aes(x = rownames(plotQ2), y = alpha+0.00005, label = alpha))+
theme_minimal()
ggplot(plotQ2)+
geom_col(aes(x = rownames(plotQ2), y = alpha))+
geom_text(aes(x = rownames(plotQ2), y = alpha+0.00003, label = alpha))+
theme_minimal()
ggplot(plotQ2)+
geom_col(aes(x = rownames(plotQ2), y = alpha))+
geom_text(aes(x = rownames(plotQ2), y = alpha+0.00003, label = round(alpha*100)))+
theme_minimal()
ggplot(plotQ2)+
geom_col(aes(x = rownames(plotQ2), y = alpha))+
geom_text(aes(x = rownames(plotQ2), y = alpha+0.00003, label = round(alpha*100,2)))+
theme_minimal()
ggplot(plotQ2)+
geom_col(aes(x = rownames(plotQ2), y = alpha))+
geom_text(aes(x = rownames(plotQ2), y = alpha+0.00003, label = paste0(round(alpha*100,2),"%")))+
theme_minimal()
reg_4fac
reg_4fac$alpha = paste0(round(reg_4fac$alpha * 100, 3), '%')
reg_4fac
ggplot(plotQ2)+
geom_col(aes(x = rownames(plotQ2), y = alpha))+
geom_text(aes(x = rownames(plotQ2), y = alpha+0.00003, label = paste0(round(alpha*100,3),"%")))+
theme_minimal()
reg_4fac
plotQ2
ggplot(plotQ2)+
geom_col(aes(x = rownames(plotQ2), y = alpha))+
geom_text(aes(x = rownames(plotQ2), y = alpha+0.00003, label = paste0(round(alpha*100,3),"%")))+
theme_minimal()
plotQ2
ggplot(plotQ2)+
geom_col(aes(x = rownames(plotQ2), y = alpha))+
geom_text(aes(x = rownames(plotQ2), y = alpha+0.00003, label = paste0(round(alpha*100,3),"%")))+
theme_minimal()
plotQ2
reg_4fac
ggplot(plotQ2)+
geom_col(aes(x = rownames(plotQ2), y = alpha))+
geom_text(aes(x = rownames(plotQ2), y = alpha+0.00003, label = paste0(round(alpha*100,3),"%")))+
theme_minimal()
ggplot(plotQ2)+
geom_col(aes(x = rownames(plotQ2), y = alpha))+
geom_text(aes(x = rownames(plotQ2), y = alpha+0.00003, label = paste0(round(alpha*100,3),"%")))+
labs(x = "strategies")
ggplot(plotQ2)+
geom_col(aes(x = rownames(plotQ2), y = alpha))+
geom_text(aes(x = rownames(plotQ2), y = alpha+0.00003, label = paste0(round(alpha*100,3),"%")))+
labs(x = "strategies")+
theme_minimal()
ggplot(plotQ2)+
geom_col(aes(x = strategies, y = value, fill = stats), position = "dodge")
plotQ2_2 <- cbind(strategies = rownames(reg_4fac), reg_4fac[,c(2,6)]) %>% pivot_longer(col = -1, names_to = "stats", values_to = "value")
ggplot(plotQ2_2)+
geom_col(aes(x = strategies, y = value, fill = stats), position = "dodge")
reg_4fac
library(writexl)
# Assume reg_4fac is your data frame
write_xlsx(reg_4fac, path = "reg_4fac.xlsx")
# Assume reg_4fac is your data frame
write_xlsx(reg_4fac, path = "reg_4fac.xlsx", add_rownames = TRUE)
# Assume reg_4fac is your data frame
write_xlsx(reg_4fac, path = "reg_4fac_with_rownames.xlsx", add_rownames = TRUE)
# Assume reg_4fac is your data frame
reg_4fac$RowNames <- rownames(reg_4fac)
# Write the data frame with row names to an Excel file
write_xlsx(reg_4fac, path = "reg_4fac_with_rownames.xlsx")
reg_4fac = NULL
for(nts.name in nts.names) {
lm.temp = lm(unlist(nts[nts.name] - rf) ~ kts$Mkt.RF + kts$SMB + kts$HML + kts$MOM)
sum = summary(lm.temp)
coef = sum$coefficients[, "Estimate"]
coef.se = sum$coefficients[, "Std. Error"]
R = sum$r.squared
coef.h0 = c(0,1,0,0,0)
coef.tstat = (coef - coef.h0) / coef.se
reg = c(coef, R, coef.tstat)
reg_4fac = rbind(reg_4fac, reg)
}
reg_4fac[, 2:5] = round(reg_4fac[, 2:5], 3)
reg_4fac[, 6:11] = round(reg_4fac[, 6:11], 2)
reg_4fac[1, 7:11] = NA
rownames(reg_4fac) = nts.names
colnames(reg_4fac) = c('alpha', 'Mkt-RF', 'SMB', 'HML', 'MOM', 'R-Squared',
'tstat.alpha', 'tstat.Mkt-RF', 'tstat.SMB', 'tstat.HML', 'tstat.MOM')
reg_4fac = as.data.frame(reg_4fac)
reg_4fac$alpha = paste0(round(reg_4fac$alpha * 100, 3), '%')
# Assume reg_4fac is your data frame
reg_4fac$Strategies <- rownames(reg_4fac)
# Write the data frame with row names to an Excel file
write_xlsx(reg_4fac, path = "reg_4fac_with_rownames.xlsx")
# Write the data frame with row names to an Excel file
write_xlsx(reg_4fac, path = "reg_4fac.xlsx")
# Write the data frame with row names to an Excel file
write_xlsx(reg_4fac, path = "reg_4fac.xlsx")
sum
kts
q1
var
reg_capm
reg_capm
var = data.frame(nts.mean, nts.sd, nts.sr, sys, idio)
var
reg_capm
reg_capm
var = data.frame(nts.mean, nts.sd, nts.sr, sys, idio)
var
reg_4fac
reg_4fac = as.data.frame(reg_4fac)
reg_4fac$alpha = paste0(round(reg_4fac$alpha * 100, 3), '%')
for(nts.name in nts.names) {
lm.temp = lm(unlist(nts[nts.name] - rf) ~ kts$Mkt.RF + kts$SMB + kts$HML + kts$MOM)
sum = summary(lm.temp)
coef = sum$coefficients[, "Estimate"]
coef.se = sum$coefficients[, "Std. Error"]
R = sum$r.squared
coef.h0 = c(0,1,0,0,0)
coef.tstat = (coef - coef.h0) / coef.se
reg = c(coef, R, coef.tstat)
reg_4fac = rbind(reg_4fac, reg)
}
reg_4fac = NULL
for(nts.name in nts.names) {
lm.temp = lm(unlist(nts[nts.name] - rf) ~ kts$Mkt.RF + kts$SMB + kts$HML + kts$MOM)
sum = summary(lm.temp)
coef = sum$coefficients[, "Estimate"]
coef.se = sum$coefficients[, "Std. Error"]
R = sum$r.squared
coef.h0 = c(0,1,0,0,0)
coef.tstat = (coef - coef.h0) / coef.se
reg = c(coef, R, coef.tstat)
reg_4fac = rbind(reg_4fac, reg)
}
reg_4fac[, 2:5] = round(reg_4fac[, 2:5], 3)
reg_4fac[, 6:11] = round(reg_4fac[, 6:11], 2)
reg_4fac[1, 7:11] = NA
rownames(reg_4fac) = nts.names
colnames(reg_4fac) = c('alpha', 'Mkt-RF', 'SMB', 'HML', 'MOM', 'R-Squared',
'tstat.alpha', 'tstat.Mkt-RF', 'tstat.SMB', 'tstat.HML', 'tstat.MOM')
reg_4fac = as.data.frame(reg_4fac)
reg_4fac$alpha = paste0(round(reg_4fac$alpha * 100, 3), '%')
reg_4fac
compare1 <- cbind(strategies = rownames(reg_4fac),
alpha = reg_4fac$alpha)
compare1
compare1 <- data.frame(strategies = rownames(reg_4fac),
alpha = reg_4fac$alpha)
compare1 <- data.frame(strategies = rownames(reg_4fac),
alpha = reg_4fac$alpha,
type = "reg_4factors")
compare1
comparealpha <- data.frame(strategies = rownames(reg_4fac),
alpha = reg_4fac$alpha,
type = "reg_4factors")
comparealpha
reg_capm
reg_capm = NULL
nts.names = colnames(nts)
for(nts.name in nts.names) {
lm.temp = lm(unlist(nts[nts.name] - rf) ~ kts$Mkt.RF)
sum = summary(lm.temp)
ab = sum$coefficients[, "Estimate"]
ab.se = sum$coefficients[, "Std. Error"]
R = sum$r.squared
ab.h0 = c(0,1)
ab.tstat = (ab - ab.h0) / ab.se
reg = c(ab, R, ab.tstat)
reg_capm = rbind(reg_capm, reg)
}
#All have significant alpha's but it is not clear if that is due to mispricing or
#another set of factors that have not been accounted for
reg
reg_capm[1,4:5] = NA
rownames(reg_capm) = nts.names
colnames(reg_capm) = c("alpha", "beta", "R-squared", "tstat.alpha", "tstat.beta")
reg_capm = as.data.frame(reg_capm)
reg_capm$alpha = paste0(round(reg_capm$alpha * 100, 3), '%')
reg_capm
reg_capm
cbind(strategies = rownames(reg_4fac), alpha = reg_capm$alpha, type = "capm"
cbind(strategies = rownames(reg_4fac), alpha = reg_capm$alpha, type = "capm")
cbind(rownames(reg_4fac), alpha = reg_capm$alpha, type = "capm")
comparealpha <- data.frame(strategies = rownames(reg_4fac),
alpha = reg_4fac$alpha,
type = "reg_4factors") %>% rbind(
cbind(rownames(reg_4fac), alpha = reg_capm$alpha, type = "capm"))
cbind(rownames(reg_4fac), alpha = reg_capm$alpha, type = "capm")
a <- cbind(rownames(reg_4fac), alpha = reg_capm$alpha, type = "capm")
a
a <- cbind(rownames(reg_4fac), alpha = reg_capm$alpha, type = "capm") %>% as.data.frame()
a
a <- data.frame(strategies = rownames(reg_4fac), alpha = reg_capm$alpha, type = "capm")
a
comparealpha <- data.frame(strategies = rownames(reg_4fac),
alpha = reg_4fac$alpha,
type = "reg_4factors") %>% rbind(a)
comparealpha
ggplot(comparealpha)+
geom_col(aes(x = strategies,  y = alpha, fill = type))
ggplot(comparealpha)+
geom_col(aes(x = strategies,  y = alpha, fill = type), position = "dodge")
ggplot(comparealpha)+
geom_col(aes(x = strategies,  y = alpha, fill = type), position = "dodge")+
geom_text(aes(x = strategies,  y = alpha))
ggplot(comparealpha)+
geom_col(aes(x = strategies,  y = alpha, fill = type), position = "dodge")+
geom_text(aes(x = strategies,  y = alpha, label = alpha))
ggplot(comparealpha)+
geom_col(aes(x = strategies,  y = alpha, fill = type), position = "dodge")+
geom_text(aes(x = strategies,  y = alpha, label = alpha, color = type))
ggplot(comparealpha)+
geom_col(aes(x = strategies,  y = alpha, fill = type), position = "dodge")+
geom_text(aes(x = strategies,  y = alpha+0.01, label = alpha, color = type))
ggplot(comparealpha)+
geom_col(aes(x = strategies,  y = alpha, fill = type), position = "dodge")+
geom_text(aes(x = strategies,  y = alpha, label = alpha, color = type))
ggplot(comparealpha)+
geom_col(aes(x = strategies,  y = alpha, fill = type), position = "dodge")+
geom_text(aes(x = strategies,  y = alpha, label = alpha))
ggplot(comparealpha)+
geom_col(aes(x = strategies,  y = alpha, fill = type), position = "dodge")+
geom_text(aes(x = strategies,  y = alpha, label = alpha))+
ylim(0, 0.003)
ggplot(comparealpha)+
geom_col(aes(x = strategies,  y = alpha, fill = type), position = "dodge")+
geom_text(aes(x = strategies,  y = alpha, label = alpha))
ggplot(comparealpha)+
geom_col(aes(x = strategies,  y = alpha, fill = type), position = "dodge")+
geom_text(aes(x = strategies,  y = alpha, label = alpha))+
theme_minimal()
comparealpha <- data.frame(strategies = rownames(reg_4fac),
beta = reg_4fac$`Mkt-RF`,
type = "reg_4factors") %>% rbind(b)
b <- data.frame(strategies = rownames(reg_4fac), beta = reg_capm$beta, type = "capm")
comparealpha <- data.frame(strategies = rownames(reg_4fac),
beta = reg_4fac$`Mkt-RF`,
type = "reg_4factors") %>% rbind(b)
a <- data.frame(strategies = rownames(reg_4fac), alpha = reg_capm$alpha, type = "capm")
comparealpha <- data.frame(strategies = rownames(reg_4fac),
alpha = reg_4fac$alpha,
type = "reg_4factors") %>% rbind(a)
comparebeta <- data.frame(strategies = rownames(reg_4fac),
beta = reg_4fac$`Mkt-RF`,
type = "reg_4factors") %>% rbind(b)
b <- data.frame(strategies = rownames(reg_4fac), beta = reg_capm$beta, type = "capm")
comparebeta <- data.frame(strategies = rownames(reg_4fac),
beta = reg_4fac$`Mkt-RF`,
type = "reg_4factors") %>% rbind(b)
ggplot(comparebeta)+
geom_col(aes(x = strategies,  y = beta, fill = type), position = "dodge")+
geom_text(aes(x = strategies,  y = beta, label = beta))+
theme_minimal()
ggplot(comparebeta)+
geom_col(aes(x = strategies,  y = beta, fill = type), position = "dodge")+
geom_text(aes(x = strategies,  y = beta, label = round(beta,2)))+
theme_minimal()
reg_4fac
library(tidyverse)
library(ggplot2)
library(stringr)
load("./data_2.RData")
#New trading strategy
nts = dt1[,1:5]
kts = dt1[,6:9] #known trading strategy
rf = dt1[,10]
#Mean of nts
nts.mean = colMeans(nts - rf) * 12
#SD of nts
nts.sd = apply(nts, 2, sd) * 12^0.5
#Sharpe
nts.sr = nts.mean / nts.sd
q1 = as.data.frame(cbind(nts.mean,nts.sd,nts.sr))
q1
reg_capm = NULL
nts.names = colnames(nts)
for(nts.name in nts.names) {
lm.temp = lm(unlist(nts[nts.name] - rf) ~ kts$Mkt.RF)
sum = summary(lm.temp)
ab = sum$coefficients[, "Estimate"]
ab.se = sum$coefficients[, "Std. Error"]
R = sum$r.squared
ab.h0 = c(0,1)
ab.tstat = (ab - ab.h0) / ab.se
reg = c(ab, R, ab.tstat)
reg_capm = rbind(reg_capm, reg)
}
#All have significant alpha's but it is not clear if that is due to mispricing or
#another set of factors that have not been accounted for
reg
reg_capm[1,4:5] = NA
rownames(reg_capm) = nts.names
colnames(reg_capm) = c("alpha", "beta", "R-squared", "tstat.alpha", "tstat.beta")
reg_capm = as.data.frame(reg_capm)
reg_capm$alpha = paste0(round(reg_capm$alpha * 100, 3), '%')
reg_capm
sys = reg_capm$'R-squared'
sys = reg_capm$'R-squared'
idio = 1 - sys
var = data.frame(nts.mean, nts.sd, nts.sr, sys, idio)
var
reg_4fac = NULL
for(nts.name in nts.names) {
lm.temp = lm(unlist(nts[nts.name] - rf) ~ kts$Mkt.RF + kts$SMB + kts$HML + kts$MOM)
sum = summary(lm.temp)
coef = sum$coefficients[, "Estimate"]
coef.se = sum$coefficients[, "Std. Error"]
R = sum$r.squared
coef.h0 = c(0,1,0,0,0)
coef.tstat = (coef - coef.h0) / coef.se
reg = c(coef, R, coef.tstat)
reg_4fac = rbind(reg_4fac, reg)
}
reg_4fac[, 2:5] = round(reg_4fac[, 2:5], 3)
reg_4fac[, 6:11] = round(reg_4fac[, 6:11], 2)
reg_4fac[1, 7:11] = NA
rownames(reg_4fac) = nts.names
colnames(reg_4fac) = c('alpha', 'Mkt-RF', 'SMB', 'HML', 'MOM', 'R-Squared',
'tstat.alpha', 'tstat.Mkt-RF', 'tstat.SMB', 'tstat.HML', 'tstat.MOM')
reg_4fac = as.data.frame(reg_4fac)
reg_4fac$alpha = paste0(round(reg_4fac$alpha * 100, 3), '%')
reg_4fac
reg_bkr = NULL
full = rep(TRUE, nrow(dt2))
sub1 = substr(rownames(dt2), 1,4) %in% as.character(1980:2007)
sub2 = !sub1
ind = cbind(full, sub1, sub2)
for(i in 1:ncol(ind)) {
samp = dt2[ind[,i],]
rf2 = samp[, 6]
BRK = samp[, 1]
kts2 = samp[, 2:5]
msr = mean(kts2[,1]) / sd(kts2[, 1] + rf2)
sr = mean(BRK - rf2) / sd(BRK)
lm.temp = lm(BRK - rf2 ~ kts2$Mkt.RF + kts2$SMB + kts2$HML + kts2$MOM)
sum = summary(lm.temp)
coef = sum$coefficients[, "Estimate"]
coef.se = sum$coefficients[, "Std. Error"]
R = sum$r.squared
coef.h0 = 0
coef.tstat = (coef - coef.h0) / coef.se
reg = c(msr, sr, coef, R, coef.tstat)
reg_bkr = rbind(reg_bkr, reg)
}
reg_bkr = as.data.frame(reg_bkr)
rownames(reg_bkr) = c('Full', '1980-2007', '2008-2013')
colnames(reg_bkr) = c('Market Sharpe Ratio', 'Sharpe Ratio', 'alpha', 'Mkt-Rsquared', 'SMB', 'HML', 'MOM',
'R-squared', 'tstat.alpha', 'tstat.Mkt-RF', 'tstat.SMB', 'tstat.HML', 'tstat.MOM')
reg_bkr$alpha = paste0(round(reg_bkr$alpha * 100, 3), '%')
reg_bkr
library(stringr)
library(Rsolnp)
y = dt3$BRK.A
x1 = dt3$Vanguard.S.P.500.Index.Inv..VFINX.
x2 = dt3$Vanguard.Small.Cap.Index.Inv..NAESX.
x3 = dt3$Vanguard.Value.Index.Inv..VIVAX.
ind_sub = str_sub(rownames(dt3), -4, -1) %in% as.character((2008:2013))
#Loss function
f_loss = function(b) {
p = y
b = b[1] + b[2]*x1 + b[3]*x2 + b[4]*x3
return(sum((b-p)^2))
}
#Equality constraints function
eq = function(b) {
return(b[2] + b[3] + b[4])
}
#Random start point
theta = c(0.1, 0.5, 0.25, 0.25)
f = function(dt, sub = FALSE, Shorts = FALSE) {
if(sub) {
dt = dt[ind_sub,]
}
y = dt[,1]
x1 = dt[,2]
x2 = dt[,3]
x3 = dt[,4]
#Define loss function
f_loss = function(b) {
p = y
b = b[1] + b[2]*x1 + b[3]*x2 + b[4]*x3
return(sum((b-p)^2))
}
if (Shorts) {
m = solnp(theta, f_loss, eqfun = eq, eqB = 1, LB = c(-Inf, -Inf, -Inf, -Inf))
} else {
m = solnp(theta, f_loss, eqfun = eq, eqB = 1, LB = c(-Inf, 0,0,0))
}
w = m$pars
y_b = as.matrix(dt) %%w
mar = mean(y - y_b)
te = sd(y - y_b)
return(c(w, mar, te))
}
#No shorts unit exposure
r1 = f(dt3, sub = F, Shorts = F)
#Short unit exposure
r2 = f(dt3, sub = F, Shorts = T)
#Recent no shorts unit exposure
r3 = f(dt3, sub = T, Shorts = F)
#Recent short unit exposure
r4 = f(dt3, sub = T, Shorts = T)
r = as.data.frame(rbind(r1, r2, r3, r4))
rownames(r) = c('1993-2013 No shorts unit exposure',
'1993-2013 Shorts unit exposure',
'2008-2013 No shorts unit exposure',
'2008-2013 Shorts unit exposure')
colnames(r) = c('alpha', 'Large', 'Small', 'Value', 'Mean active returns', 'Tracking error')
r$alpha = paste0(round(r$alpha * 100, 3), '%')
r[,-1] =  round(r[,-1], 3)
r
